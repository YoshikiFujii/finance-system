CREATE TABLE IF NOT EXISTS departments (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
is_active TINYINT(1) NOT NULL DEFAULT 1,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS members (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
department_id BIGINT NOT NULL,
is_active TINYINT(1) NOT NULL DEFAULT 1,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (department_id) REFERENCES departments(id)
);

CREATE TABLE IF NOT EXISTS requests (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
request_no VARCHAR(20) NOT NULL UNIQUE,
member_id BIGINT NOT NULL,
department_id BIGINT NOT NULL,
submitted_at DATETIME NOT NULL,
summary VARCHAR(255) NOT NULL,
expects_network ENUM('NONE','CONVENIENCE','BANK_TRANSFER') NOT NULL DEFAULT 'NONE',
state ENUM(
'NEW','ACCEPTED','REJECTED',
'CASH_GIVEN','COLLECTED','RECEIPT_DONE',
'CASH_WITHDRAWN','PAID',
'TRANSFERRED'
) NOT NULL DEFAULT 'NEW',
expected_total DECIMAL(12,2) DEFAULT NULL,
cash_given DECIMAL(12,2) DEFAULT NULL,
diff_amount DECIMAL(12,2) DEFAULT NULL,
excel_path VARCHAR(255) NOT NULL,
notes TEXT,
rejected_reason VARCHAR(255),
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (member_id) REFERENCES members(id),
FOREIGN KEY (department_id) REFERENCES departments(id)
);


CREATE TABLE IF NOT EXISTS request_items (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
request_id BIGINT NOT NULL,
purpose VARCHAR(255) NOT NULL,
amount DECIMAL(12,2) NOT NULL,
FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS receipts (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
request_id BIGINT NOT NULL,
kind ENUM('RECEIPT','INVOICE','TRANSFER_SLIP','PAYMENT_SLIP') NOT NULL,
total DECIMAL(12,2) NOT NULL,
change_returned DECIMAL(12,2) DEFAULT 0.00,
file_path VARCHAR(255) NOT NULL,
taken_at DATETIME NOT NULL,
memo VARCHAR(255),
FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS audit_logs (
id BIGINT AUTO_INCREMENT PRIMARY KEY,
request_id BIGINT,
actor VARCHAR(50) NOT NULL,
action VARCHAR(50) NOT NULL,
detail TEXT,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
INDEX req_actor_idx (request_id, actor)
);


CREATE TABLE IF NOT EXISTS passwords (
role ENUM('OFFICER','FINANCE','ADMIN') PRIMARY KEY,
pass_hash VARCHAR(255) NOT NULL,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


INSERT INTO departments(name) VALUES ('総務'),('財務'),('広報');
INSERT INTO members(name, department_id) VALUES ('山田太郎',1),('佐藤花子',2),('鈴木一郎',3);
# 初期パスワード（例）: 役員/officer123, 財務/finance123, 管理/admin123
# 生成例: PHPのpassword_hashで生成し、以下に貼る
INSERT INTO passwords(role, pass_hash) VALUES
('OFFICER', '$2y$10$cq98v2k4n.XzkQNVmEn9b.xzzdbR/YSh9w9r0f96gTEuBHfShFDMy'),
('FINANCE', '$2y$10$E6JIpvU4eDEUCvp23LKmWuMufY5LvP9YCd7Y5x5R7MbLEgELb9JjS'),
('ADMIN', '$2y$10$8e.bRVEZg/QXBOGWTCHVR.AoUT7qCHCFs7dKtjPeyUhrk/i5tHE6W');

